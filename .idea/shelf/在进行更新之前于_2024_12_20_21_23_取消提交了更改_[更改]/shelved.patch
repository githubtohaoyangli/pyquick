Index: python_tool.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom tkinter import ttk, filedialog,messagebox\r\nimport subprocess\r\nimport os\r\nimport threading\r\nimport requests\r\nimport sv_ttk\r\nimport time\r\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\r\nimport re\r\nimport datetime\r\n# 禁用 SSL 警告\r\nrequests.packages.urllib3.disable_warnings()\r\n\r\n# 获取当前工作目录\r\nMY_PATH = os.getcwd()\r\n\r\n# 如果保存目录不存在，则创建它\r\nSAVED_DIR = os.path.join(MY_PATH, \"saved\")\r\nif not os.path.exists(SAVED_DIR):\r\n    os.mkdir(SAVED_DIR)\r\n\r\ndef show_about():\r\n    \"\"\"显示关于对话框\"\"\"\r\n    if datetime.datetime.now() >= datetime.datetime(2025, 1, 1):\r\n        time_lim = datetime.datetime.now().day - datetime.datetime(2025, 3, 13).day +abs( datetime.datetime(2025, 3, 13).month-datetime.datetime.now().month)*30\r\n        messagebox.showwarning(\"About\", f\"Version: 2.0 dev\\nBeta Version: 1905\\nExpiration time:2025/3/13\\n only {time_lim} days left.\")\r\n    else:\r\n\r\n        messagebox.showinfo(\"About\", \"Version: 2.0 dev\\nBeta Version: 1905\\nExpiration time:2025/3/13\")\r\n# 可供选择的 Python 版本列表\r\nVERSIONS = [\r\n    \"3.13.0\",\r\n    \"3.12.0\",\r\n    \"3.11.0\",\r\n    \"3.10.0\",\r\n    \"3.9.0\",\r\n    \"3.8.0\",\r\n    \"3.7.0\",\r\n    \"3.6.0\",\r\n    \"3.5.0\"\r\n]\r\n\r\n# 全局变量\r\nfile_size = 0\r\nexecutor = None\r\nfutures = []\r\nlock = threading.Lock()\r\ndownloaded_bytes = [0]\r\nis_downloading = False\r\n\r\ndef clear():\r\n    \"\"\"清除状态标签和包标签的文本\"\"\"\r\n    status_label.config(text=\"\")\r\n    package_label.config(text=\"Enter Package Name:\")\r\n\r\ndef select_destination():\r\n    \"\"\"选择目标路径\"\"\"\r\n    destination_path = filedialog.askdirectory()\r\n    if destination_path:\r\n        destination_entry.delete(0, tk.END)\r\n        destination_entry.insert(0, destination_path)\r\n\r\ndef validate_version(version):\r\n    \"\"\"\r\n    验证版本号格式是否符合预期的格式\r\n\r\n    此函数通过正则表达式检查传入的版本号是否符合 major.minor.patch 的格式，\r\n    其中 major、minor 和 patch 都是数字\r\n\r\n    参数:\r\n    version (str): 需要验证的版本号字符串\r\n\r\n    返回:\r\n    bool: 如果版本号符合预期格式，则返回 True，否则返回 False\r\n    \"\"\"\r\n    # 定义版本号的正则表达式模式，确保版本号是 major.minor.patch 的格式\r\n    pattern = r'^\\d+\\.\\d+\\.\\d+$'\r\n    # 使用正则表达式匹配版本号，返回匹配结果的布尔值\r\n    return bool(re.match(pattern, version))\r\n\r\n\r\ndef validate_path(path):\r\n    \"\"\"\r\n    验证路径是否存在\r\n\r\n    参数:\r\n    path (str): 需要验证的路径\r\n\r\n    返回:\r\n    bool: 如果路径存在返回True，否则返回False\r\n    \"\"\"\r\n    return os.path.isdir(path)\r\n\r\n\r\ndef download_chunk(url, start_byte, end_byte, destination, retries=3):\r\n    \"\"\"\r\n    下载文件的指定部分\r\n\r\n    :param url: 文件的URL\r\n    :param start_byte: 开始下载的字节位置\r\n    :param end_byte: 结束下载的字节位置\r\n    :param destination: 文件保存的目标路径\r\n    :param retries: 最大重试次数，默认为3次\r\n    :return: 如果下载成功返回True，否则返回False\r\n    \"\"\"\r\n    global is_downloading\r\n    # 构造请求头，指定下载的字节范围\r\n    headers = {'Range': f'bytes={start_byte}-{end_byte}'}\r\n    attempt = 0\r\n    # 尝试下载文件，如果失败则重试\r\n    while attempt < retries:\r\n        try:\r\n            # 发起HTTP请求，包含自定义请求头，启用流式响应，设置超时\r\n            response = requests.get(url, headers=headers, stream=True, timeout=10)\r\n            # 检查响应状态码，如果状态码表示错误，则抛出异常\r\n            response.raise_for_status()\r\n            # 使用文件锁确保并发安全，打开文件准备写入\r\n            with lock:\r\n                with open(destination, 'r+b') as f:\r\n                    f.seek(start_byte)\r\n                    # 遍历响应内容，写入到文件中\r\n                    for chunk in response.iter_content(chunk_size=8192):\r\n                        if not is_downloading:\r\n                            return False\r\n                        f.write(chunk)\r\n                        downloaded_bytes[0] += len(chunk)\r\n            return True\r\n        except requests.RequestException as e:\r\n            # 如果发生网络请求异常，更新状态标签并重试\r\n            with lock:\r\n                status_label.config(text=f\"Download Failed! Retrying... ({attempt + 1}/{retries})\")\r\n            attempt += 1\r\n    # 如果重试次数用尽仍然失败，更新状态标签并设置下载状态为False\r\n    with lock:\r\n        status_label.config(text=f\"Download Failed! Error: {str(e)}\")\r\n        is_downloading = False\r\n    return False\r\n\r\n\r\n\r\n# 定义下载指定版本Python安装程序的函数\r\ndef download_file(selected_version, destination_path, num_threads):\r\n    \"\"\"下载指定版本的Python安装程序\"\"\"\r\n    global file_size, executor, futures, downloaded_bytes, is_downloading,destination\r\n    # 验证版本号是否有效\r\n    if not validate_version(selected_version):\r\n        status_label.config(text=\"Invalid version number\")\r\n        root.after(5000, clear)\r\n        return\r\n\r\n    # 验证目标路径是否有效\r\n    if not validate_path(destination_path):\r\n        status_label.config(text=\"Invalid destination path\")\r\n        root.after(5000, clear)\r\n        return\r\n\r\n    # 构造文件名和目标路径\r\n    file_name = f\"python-{selected_version}-amd64.exe\"\r\n    destination = os.path.join(destination_path, file_name)\r\n\r\n    # 如果目标文件已存在，尝试删除它\r\n    if os.path.exists(destination):\r\n        try:\r\n            os.remove(destination)\r\n        except (PermissionError, FileNotFoundError) as e:\r\n            status_label.config(text=f\"Failed to remove existing file: {str(e)}\")\r\n            root.after(5000, clear)\r\n            return\r\n\r\n    # 构造下载URL\r\n    url = f\"https://www.python.org/ftp/python/{selected_version}/python-{selected_version}-amd64.exe\"\r\n\r\n    # 获取文件大小\r\n    try:\r\n        response = requests.head(url, timeout=10)\r\n        response.raise_for_status()\r\n        file_size = int(response.headers['Content-Length'])\r\n    except requests.RequestException as e:\r\n        status_label.config(text=f\"Failed to get file size: {str(e)}\")\r\n        root.after(5000, clear)\r\n        return\r\n\r\n    # 尝试创建目标文件\r\n    try:\r\n        with open(destination, 'wb') as f:\r\n            pass\r\n    except IOError as e:\r\n        status_label.config(text=f\"Failed to create file: {str(e)}\")\r\n        root.after(5000, clear)\r\n        return\r\n\r\n    # 计算每个线程下载的数据块大小\r\n    chunk_size = file_size // num_threads\r\n    futures = []\r\n    downloaded_bytes = [0]\r\n    is_downloading = True\r\n\r\n    # 使用线程池执行下载任务\r\n    executor = ThreadPoolExecutor(max_workers=num_threads)\r\n    for i in range(num_threads):\r\n        start_byte = i * chunk_size\r\n        end_byte = start_byte + chunk_size - 1 if i != num_threads - 1 else file_size - 1\r\n        def start():\r\n            futures.append(executor.submit(download_chunk, url, start_byte, end_byte, destination))\r\n        threading.Thread(target=start,daemon=True).start()\r\n\r\n    # 启动一个线程来更新下载进度\r\n    threading.Thread(target=update_progress, daemon=True).start()\r\n    # 启用取消下载按钮\r\n    cancel_button.config(state=\"normal\")\r\n\r\n\r\ndef update_progress():\r\n    \"\"\"更新进度条和状态标签\r\n\r\n    通过计算已下载字节数与总文件大小的比例来更新进度条和状态标签的文本。\r\n    此函数在一个单独的线程中运行，以保持UI响应性。\r\n    \"\"\"\r\n    global file_size, is_downloading\r\n    # 当有任何一个下载任务未完成时，继续更新进度\r\n    while any(not future.done() for future in futures):\r\n        # 如果下载状态为False，则停止更新进度\r\n        if not is_downloading:\r\n            break\r\n        # 计算并更新下载进度的百分比\r\n        progress = int(downloaded_bytes[0] / file_size * 100)\r\n        # 将已下载字节数转换为MB\r\n        downloaded_mb = downloaded_bytes[0] / (1024 * 1024)\r\n        # 将总文件大小转换为MB\r\n        total_mb = file_size / (1024 * 1024)\r\n        # 更新状态标签的文本，显示下载进度和已下载/总文件大小\r\n        status_label.config(text=f\"Progress: {progress}% ({downloaded_mb:.2f} MB / {total_mb:.2f} MB)\")\r\n        # 更新进度条的值\r\n        progress_bar['value'] = progress\r\n        # 暂停0.1秒，减少UI更新频率\r\n        time.sleep(0.05)\r\n    # 如果下载状态为True，则表示下载已完成\r\n    if is_downloading:\r\n        status_label.config(text=\"Download Complete!\")\r\n    # 如果下载状态为False，则表示下载已取消\r\n    else:\r\n        status_label.config(text=\"Download Cancelled!\")\r\n    # 将下载状态设置为False，表示下载已完成或已取消\r\n    is_downloading = False\r\n    # 禁用取消下载按钮，防止用户在下载已完成或已取消的情况下点击按钮\r\n    cancel_button.config(state=\"disabled\")\r\n\r\n\r\ndef cancel_download():\r\n    \"\"\"取消正在进行的下载\"\"\"\r\n    global is_downloading\r\n    is_downloading = False\r\n    if executor:\r\n        executor.shutdown(wait=False)\r\n        cancel_button.config(state=\"disabled\")  # 禁用取消下载按钮\r\n        progress_bar['value'] = 0\r\n        time.sleep(0.5)\r\n        os.remove(destination)\r\n\r\n\r\n\r\ndef download_selected_version():\r\n    \"\"\"开始下载选定的Python版本\"\"\"\r\n    selected_version = version_combobox.get()\r\n    destination_path = destination_entry.get()\r\n    num_threads = int(thread_combobox.get())\r\n\r\n    if not os.path.exists(destination_path):\r\n        status_label.config(text=\"Invalid path!\")\r\n        root.after(5000, clear)\r\n        return\r\n\r\n    threading.Thread(target=download_file, args=(selected_version, destination_path, num_threads), daemon=True).start()\r\n\r\n\r\n\r\ndef confirm_cancel_download():\r\n    \"\"\"确认取消下载\"\"\"\r\n    if messagebox.askyesno(\"Confirm\", \"Are you sure you want to cancel the download?\"):\r\n        threading.Thread(target=cancel_download, daemon=True).start()\r\n\r\ndef get_pip_version():\r\n    \"\"\"获取当前pip版本\"\"\"\r\n    try:\r\n        return subprocess.check_output([\"pip\", \"--version\"], creationflags=subprocess.CREATE_NO_WINDOW).decode().strip().split()[1]\r\n    except subprocess.CalledProcessError as e:\r\n        print(f\"Subprocess error: {e}\")\r\n        return None\r\n\r\ndef get_latest_pip_version():\r\n    \"\"\"获取最新pip版本\"\"\"\r\n    try:\r\n        r = requests.get(\"https://pypi.org/pypi/pip/json\", verify=False)\r\n        return r.json()[\"info\"][\"version\"]\r\n    except requests.RequestException as e:\r\n        print(f\"Request error: {e}\")\r\n        return None\r\n\r\ndef update_pip():\r\n    \"\"\"更新pip到最新版本\"\"\"\r\n    try:\r\n        subprocess.run([\"python\", \"-m\", \"pip\", \"install\", \"--upgrade\", \"pip\"], creationflags=subprocess.CREATE_NO_WINDOW)\r\n        return True\r\n    except subprocess.CalledProcessError as e:\r\n        print(f\"Subprocess error: {e}\")\r\n        return False\r\n\r\ndef check_pip_version():\r\n    \"\"\"检查并更新pip版本\"\"\"\r\n    current_version = get_pip_version()\r\n    if current_version is None:\r\n        package_label.config(text=\"Error: Failed to get current pip version\")\r\n        time.sleep(5)\r\n        clear()\r\n        return\r\n\r\n    latest_version = get_latest_pip_version()\r\n    if latest_version is None:\r\n        package_label.config(text=\"Error: Failed to get latest pip version\")\r\n        time.sleep(5)\r\n        clear()\r\n        return\r\n\r\n    if current_version != latest_version:\r\n        message = f\"Current pip version: {current_version}\\nLatest pip version: {latest_version}\\nUpdating pip...\"\r\n        package_label.config(text=message)\r\n        if update_pip():\r\n            package_label.config(text=f\"pip has been updated! {latest_version}\")\r\n            time.sleep(5)\r\n            clear()\r\n        else:\r\n            package_label.config(text=\"Error: Failed to update pip\")\r\n            time.sleep(5)\r\n            clear()\r\n    else:\r\n        package_label.config(text=f\"pip is up to date: {current_version}\")\r\n        time.sleep(5)\r\n        clear()\r\n\r\ndef upgrade_pip():\r\n    \"\"\"启动pip版本检查线程\"\"\"\r\n    try:\r\n        subprocess.check_output([\"python\", \"--version\"], creationflags=subprocess.CREATE_NO_WINDOW)\r\n        threading.Thread(target=check_pip_version, daemon=True).start()\r\n    except FileNotFoundError:\r\n        package_label.config(text=\"Python is not installed.\")\r\n        time.sleep(5)\r\n        clear()\r\n    except Exception as e:\r\n        package_label.config(text=f\"Error: {str(e)}\")\r\n        time.sleep(5)\r\n        clear()\r\n\r\ndef install_package():\r\n    \"\"\"安装指定的Python包\"\"\"\r\n    try:\r\n        subprocess.check_output([\"python\", \"--version\"], creationflags=subprocess.CREATE_NO_WINDOW)\r\n        package_name = package_entry.get()\r\n\r\n        def install_package_thread():\r\n            try:\r\n                result = subprocess.run([\"python\", \"-m\", \"pip\", \"install\", package_name], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)\r\n                installed = subprocess.check_output([\"python\", \"-m\", \"pip\", \"list\", \"--format=columns\"], text=True, creationflags=subprocess.CREATE_NO_WINDOW)\r\n                if \"Successfully installed\" in result.stdout:\r\n                    package_label.config(text=f\"Package '{package_name}' has been installed successfully!\")\r\n                    time.sleep(5)\r\n                    clear()\r\n                elif package_name.lower() in installed.lower():\r\n                    package_label.config(text=f\"Package {package_name} is already installed.\")\r\n                    time.sleep(5)\r\n                    clear()\r\n                else:\r\n                    package_label.config(text=f\"Error installing package '{package_name}': {result.stderr}\")\r\n                    time.sleep(5)\r\n                    clear()\r\n            except Exception as e:\r\n                package_label.config(text=f\"Error installing package '{package_name}': {str(e)}\")\r\n                time.sleep(5)\r\n                clear()\r\n\r\n        threading.Thread(target=install_package_thread).start()\r\n    except FileNotFoundError:\r\n        package_label.config(text=\"Python is not installed.\")\r\n        time.sleep(5)\r\n        clear()\r\n    except Exception as e:\r\n        package_label.config(text=f\"Error: {str(e)}\")\r\n        time.sleep(5)\r\n        clear()\r\n\r\ndef uninstall_package():\r\n    \"\"\"卸载指定的Python包\"\"\"\r\n    try:\r\n        subprocess.check_output([\"python\", \"--version\"], creationflags=subprocess.CREATE_NO_WINDOW)\r\n        package_name = package_entry.get()\r\n\r\n        try:\r\n            installed_packages = subprocess.check_output([\"python\", \"-m\", \"pip\", \"list\", \"--format=columns\"], text=True, creationflags=subprocess.CREATE_NO_WINDOW)\r\n            if package_name.lower() in installed_packages.lower():\r\n                result = subprocess.run([\"python\", \"-m\", \"pip\", \"uninstall\", \"-y\", package_name], capture_output=True, text=True, creationflags=subprocess.CREATE_NO_WINDOW)\r\n                if \"Successfully uninstalled\" in result.stdout:\r\n                    package_label.config(text=f\"Package '{package_name}' has been uninstalled successfully!\")\r\n                    time.sleep(5)\r\n                    clear()\r\n                else:\r\n                    package_label.config(text=f\"Error uninstalling package '{package_name}': {result.stderr}\")\r\n                    time.sleep(5)\r\n                    clear()\r\n            else:\r\n                package_label.config(text=f\"Package '{package_name}' is not installed.\")\r\n                time.sleep(5)\r\n                clear()\r\n        except Exception as e:\r\n            package_label.config(text=f\"Error uninstalling package '{package_name}': {str(e)}\")\r\n            time.sleep(5)\r\n            clear()\r\n    except FileNotFoundError:\r\n        package_label.config(text=\"Python is not installed.\")\r\n        time.sleep(5)\r\n        clear()\r\n    except Exception as e:\r\n        package_label.config(text=f\"Error: {str(e)}\")\r\n        time.sleep(5)\r\n        clear()\r\n\r\ndef check_python_installation():\r\n    \"\"\"检查Python是否已安装\"\"\"\r\n    try:\r\n        subprocess.check_output([\"python\", \"--version\"], creationflags=subprocess.CREATE_NO_WINDOW)\r\n    except Exception as e:\r\n        status_label.config(text=\"Python is not installed.\")\r\n        pip_upgrade_button.config(state=\"disabled\")\r\n        install_button.config(state=\"disabled\")\r\n        uninstall_button.config(state=\"disabled\")\r\n        time.sleep(5)\r\n        clear()\r\n\r\ndef switch_theme():\r\n    \"\"\"切换主题\"\"\"\r\n    if switch.get():\r\n        sv_ttk.set_theme(\"dark\")\r\n        save_theme(\"dark\")\r\n    else:\r\n        sv_ttk.set_theme(\"light\")\r\n        save_theme(\"light\")\r\n\r\ndef save_theme(theme):\r\n    \"\"\"保存主题设置\"\"\"\r\n    with open(os.path.join(SAVED_DIR, \"theme.txt\"), \"w\") as a:\r\n        a.write(theme)\r\n\r\ndef load_theme():\r\n    \"\"\"加载主题设置\"\"\"\r\n    try:\r\n        with open(os.path.join(SAVED_DIR, \"theme.txt\"), \"r\") as r:\r\n            theme = r.read()\r\n        if theme == \"dark\":\r\n            switch.set(True)\r\n            sv_ttk.set_theme(\"dark\")\r\n        elif theme == \"light\":\r\n            switch.set(False)\r\n            sv_ttk.set_theme(\"light\")\r\n    except Exception:\r\n        sv_ttk.set_theme(\"light\")\r\n\r\ndef update():\r\n    \"\"\"检查更新\"\"\"\r\n    r = requests.get(\"https://githubtohaoyangli.github.io/info/info.json\")\r\n    ver = r.json()[\"releases\"][\"release1\"][\"version\"]\r\n    myver = \"1.1.0\"\r\n    if ver > myver:\r\n        pass\r\n\r\nif __name__ == \"__main__\":\r\n    if datetime.datetime.now() >= datetime.datetime(2025, 3, 13):\r\n        messagebox.showerror(\"Error\", \"This program cannot be opened after March 13, 2025.\")\r\n        exit(1)\r\n    root = tk.Tk()\r\n    root.title(\"Python_Tool\")\r\n    root.resizable(False, False)\r\n    icon_path = os.path.join(MY_PATH, 'pythontool.ico')\r\n    if os.path.exists(icon_path):\r\n        root.iconbitmap(icon_path)\r\n    menubar = tk.Menu(root)\r\n    root.config(menu=menubar)\r\n\r\n    # 添加 Help 菜单项\r\n    help_menu = tk.Menu(menubar, tearoff=0)\r\n    menubar.add_cascade(label=\"Help\", menu=help_menu)\r\n    help_menu.add_command(label=\"About\", command=show_about)\r\n\r\n    note = ttk.Notebook(root)\r\n    download_frame = ttk.Frame(note, padding=\"10\")\r\n    pip_frame = ttk.Frame(note, padding=\"10\")\r\n    note.add(download_frame, text=\"Python Download\")\r\n    note.add(pip_frame, text=\"pip Management\")\r\n    note.grid(padx=10, pady=10, row=0, column=0)\r\n\r\n    # Python Download Frame\r\n    version_label = ttk.Label(download_frame, text=\"Select Python Version:\")\r\n    version_label.grid(row=0, column=0, pady=5, sticky=\"e\")\r\n    version_combobox = ttk.Combobox(download_frame, values=VERSIONS, state=\"readonly\")\r\n    version_combobox.grid(row=0, column=1, pady=5, padx=5, sticky=\"w\")\r\n    version_combobox.current(0)\r\n\r\n    destination_label = ttk.Label(download_frame, text=\"Select Destination:\")\r\n    destination_label.grid(row=1, column=0, pady=5, sticky=\"e\")\r\n    destination_entry = ttk.Entry(download_frame, width=40)\r\n    destination_entry.grid(row=1, column=1, pady=5, padx=5, sticky=\"w\")\r\n    select_button = ttk.Button(download_frame, text=\"Select Path\", command=select_destination)\r\n    select_button.grid(row=1, column=2, pady=5, padx=5, sticky=\"w\")\r\n\r\n    thread_label = ttk.Label(download_frame, text=\"Select Number of Threads:\")\r\n    thread_label.grid(row=2, column=0, pady=5, sticky=\"e\")\r\n    thread_combobox = ttk.Combobox(download_frame, values=[str(i) for i in range(1, 1025)], state=\"readonly\")\r\n    thread_combobox.grid(row=2, column=1, pady=5, padx=5, sticky=\"w\")\r\n    thread_combobox.current(31)  # Default to 32 threads\r\n\r\n    download_button = ttk.Button(download_frame, text=\"Download Selected Version\", command=download_selected_version)\r\n    download_button.grid(row=3, column=0, columnspan=3, pady=10, padx=5)\r\n    cancel_button = ttk.Button(download_frame, text=\"Cancel Download\", command=confirm_cancel_download)\r\n    cancel_button.grid(row=4, column=0, pady=10, padx=5,columnspan=3)\r\n    cancel_button.config(state=\"disabled\")\r\n\r\n    progress_bar = ttk.Progressbar(download_frame, orient='horizontal', length=300, mode='determinate')\r\n    progress_bar.grid(row=5, column=0, columnspan=3, pady=10, padx=5)\r\n    status_label = ttk.Label(download_frame, text=\"\", padding=\"5\")\r\n    status_label.grid(row=6, column=0, columnspan=3, pady=5, padx=5)\r\n\r\n    # pip Management Frame\r\n    pip_upgrade_button = ttk.Button(pip_frame, text=\"Upgrade pip\", command=upgrade_pip)\r\n    pip_upgrade_button.grid(row=0, column=0, columnspan=3, pady=10, padx=5)\r\n    package_label = ttk.Label(pip_frame, text=\"Enter Package Name:\")\r\n    package_label.grid(row=1, column=0, pady=5, padx=5, sticky=\"e\")\r\n    package_entry = ttk.Entry(pip_frame, width=40)\r\n    package_entry.grid(row=1, column=1, pady=5, padx=5, sticky=\"w\")\r\n    install_button = ttk.Button(pip_frame, text=\"Install Package\", command=install_package)\r\n    install_button.grid(row=2, column=0, columnspan=3, pady=10, padx=5)\r\n    uninstall_button = ttk.Button(pip_frame, text=\"Uninstall Package\", command=uninstall_package)\r\n    uninstall_button.grid(row=3, column=0, columnspan=3, pady=10, padx=5)\r\n    package_status_label = ttk.Label(pip_frame, text=\"\", padding=\"5\")\r\n    package_status_label.grid(row=4, column=0, columnspan=3, pady=5, padx=5)\r\n\r\n    switch = tk.BooleanVar()\r\n    themes = ttk.Checkbutton(root, text=\"Dark Mode\", variable=switch, style=\"Switch.TCheckbutton\", command=switch_theme)\r\n    themes.grid(row=1, column=0, pady=10, padx=5, sticky=\"w\")\r\n    load_theme()\r\n\r\n    check_python_installation()\r\n    root.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python_tool.py b/python_tool.py
--- a/python_tool.py	(revision ae733af3f91e85b1a5618ea94d88a85a599de07c)
+++ b/python_tool.py	(date 1734268731812)
@@ -23,11 +23,11 @@
 def show_about():
     """显示关于对话框"""
     if datetime.datetime.now() >= datetime.datetime(2025, 1, 1):
-        time_lim = datetime.datetime.now().day - datetime.datetime(2025, 3, 13).day +abs( datetime.datetime(2025, 3, 13).month-datetime.datetime.now().month)*30
-        messagebox.showwarning("About", f"Version: 2.0 dev\nBeta Version: 1905\nExpiration time:2025/3/13\n only {time_lim} days left.")
+        time_lim =   datetime.datetime(2025, 3, 13) -datetime.datetime.now()
+        messagebox.showwarning("About", f"Version: 2.0 dev\nBeta Version: 1905\nExpiration time:2025/3/13\n only {time_lim} hours  left.")
     else:
-
-        messagebox.showinfo("About", "Version: 2.0 dev\nBeta Version: 1905\nExpiration time:2025/3/13")
+        time_lim = datetime.datetime(2025, 3, 13) - datetime.datetime.now()
+        messagebox.showinfo("About", f"Version: 2.0 dev\nBeta Version: 1905\nExpiration time:2025/3/13\n only {time_lim} hours left.")
 # 可供选择的 Python 版本列表
 VERSIONS = [
     "3.13.0",
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"56bd5401-5e0f-41bf-9036-2680e28944ff\" name=\"更改\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/python_tool.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/python_tool.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"dev-mac\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/app/1.py\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/python_tool.py\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ps87vLrTQqhSXhcKL82w1hhQle\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.1.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.dem.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.downloader.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.p.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.python_tool.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.utils.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Documents/GitHub/python_tool&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Documents\\GitHub\\python_tool\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-PY-243.22562.180\" />\r\n        <option value=\"bundled-python-sdk-85c76a3b01b3-9a18a617cbe4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.22562.180\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"56bd5401-5e0f-41bf-9036-2680e28944ff\" name=\"更改\" comment=\"\" />\r\n      <created>1733543260524</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1733543260524</updated>\r\n      <workItem from=\"1733543261197\" duration=\"1048000\" />\r\n      <workItem from=\"1733544492391\" duration=\"1078000\" />\r\n      <workItem from=\"1733571317262\" duration=\"124000\" />\r\n      <workItem from=\"1733571770378\" duration=\"8339000\" />\r\n      <workItem from=\"1734126321203\" duration=\"3000\" />\r\n      <workItem from=\"1734126368438\" duration=\"3000\" />\r\n      <workItem from=\"1734154826752\" duration=\"214000\" />\r\n      <workItem from=\"1734155064669\" duration=\"865000\" />\r\n      <workItem from=\"1734155970467\" duration=\"687000\" />\r\n      <workItem from=\"1734165351328\" duration=\"8155000\" />\r\n      <workItem from=\"1734175795890\" duration=\"3719000\" />\r\n      <workItem from=\"1734180938566\" duration=\"10919000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/python_tool$dem.coverage\" NAME=\"dem 覆盖结果\" MODIFIED=\"1733577638360\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/QT\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$utils.coverage\" NAME=\"utils 覆盖结果\" MODIFIED=\"1734183501215\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$downloader.coverage\" NAME=\"downloader 覆盖结果\" MODIFIED=\"1734183520169\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$main.coverage\" NAME=\"main 覆盖结果\" MODIFIED=\"1734183560869\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$python_tool.coverage\" NAME=\"python_tool 覆盖结果\" MODIFIED=\"1734267998300\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$p.coverage\" NAME=\"p 覆盖结果\" MODIFIED=\"1734155467020\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/pa\" />\r\n    <SUITE FILE_PATH=\"coverage/python_tool$1.coverage\" NAME=\"1 覆盖结果\" MODIFIED=\"1734185046724\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/app\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ae733af3f91e85b1a5618ea94d88a85a599de07c)
+++ b/.idea/workspace.xml	(date 1734700990860)
@@ -4,7 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="56bd5401-5e0f-41bf-9036-2680e28944ff" name="更改" comment="">
+    <list default="true" id="56bd5401-5e0f-41bf-9036-2680e28944ff" name="更改" comment="update">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/python_tool.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_tool.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -20,6 +21,12 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PUSH_TAGS">
+      <GitPushTagMode>
+        <option name="argument" value="--tags" />
+        <option name="title" value="All" />
+      </GitPushTagMode>
+    </option>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
         <entry key="$PROJECT_DIR$" value="dev-mac" />
@@ -27,9 +34,20 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;githubtohaoyangli&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/githubtohaoyangli/pyquick.git&quot;,
+    &quot;accountId&quot;: &quot;be3b1505-e2a6-4436-84bf-ea83915f7dde&quot;
+  }
+}</component>
   <component name="HighlightingSettingsPerFile">
-    <setting file="file://$PROJECT_DIR$/app/1.py" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/python_tool.py" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/python_tool.py" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 2
@@ -42,29 +60,29 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.1.executor&quot;: &quot;Run&quot;,
-    &quot;Python.dem.executor&quot;: &quot;Run&quot;,
-    &quot;Python.downloader.executor&quot;: &quot;Run&quot;,
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;Python.p.executor&quot;: &quot;Run&quot;,
-    &quot;Python.python_tool.executor&quot;: &quot;Run&quot;,
-    &quot;Python.utils.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;dev&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Documents/GitHub/python_tool&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python.1.executor": "Run",
+    "Python.dem.executor": "Run",
+    "Python.downloader.executor": "Run",
+    "Python.main.executor": "Run",
+    "Python.p.executor": "Run",
+    "Python.python_tool.executor": "Run",
+    "Python.utils.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "deletionFromPopupRequiresConfirmation": "false",
+    "git-widget-placeholder": "dev",
+    "last_opened_file_path": "D:/Documents/GitHub/python_tool",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "Code Search",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Documents\GitHub\python_tool" />
@@ -97,8 +115,26 @@
       <workItem from="1734155970467" duration="687000" />
       <workItem from="1734165351328" duration="8155000" />
       <workItem from="1734175795890" duration="3719000" />
-      <workItem from="1734180938566" duration="10919000" />
+      <workItem from="1734180938566" duration="11328000" />
+      <workItem from="1734700106875" duration="879000" />
     </task>
+    <task id="LOCAL-00001" summary="update">
+      <option name="closed" value="true" />
+      <created>1734268262080</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1734268262080</updated>
+    </task>
+    <task id="LOCAL-00002" summary="update">
+      <option name="closed" value="true" />
+      <created>1734268299138</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1734268299138</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -115,12 +151,16 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="update" />
+    <option name="LAST_COMMIT_MESSAGE" value="update" />
+  </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/python_tool$dem.coverage" NAME="dem 覆盖结果" MODIFIED="1733577638360" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/QT" />
     <SUITE FILE_PATH="coverage/python_tool$utils.coverage" NAME="utils 覆盖结果" MODIFIED="1734183501215" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
     <SUITE FILE_PATH="coverage/python_tool$downloader.coverage" NAME="downloader 覆盖结果" MODIFIED="1734183520169" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
     <SUITE FILE_PATH="coverage/python_tool$main.coverage" NAME="main 覆盖结果" MODIFIED="1734183560869" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
-    <SUITE FILE_PATH="coverage/python_tool$python_tool.coverage" NAME="python_tool 覆盖结果" MODIFIED="1734267998300" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/python_tool$python_tool.coverage" NAME="python_tool 覆盖结果" MODIFIED="1734268655496" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/python_tool$p.coverage" NAME="p 覆盖结果" MODIFIED="1734155467020" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/pa" />
     <SUITE FILE_PATH="coverage/python_tool$1.coverage" NAME="1 覆盖结果" MODIFIED="1734185046724" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
   </component>
